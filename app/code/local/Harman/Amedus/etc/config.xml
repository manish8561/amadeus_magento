<?xml version="1.0"?>
<config>
  <modules>
    <Harman_Amedus>
      <version>0.1.0</version>
    </Harman_Amedus>
  </modules>
  <frontend>
    <routers>
      <amedus>
        <use>standard</use>
          <args>
            <module>Harman_Amedus</module>
            <frontName>amedus</frontName>
          </args>
      </amedus>
    </routers>
		<layout>
		  <updates>
			<amedus>
			  <file>amedus.xml</file>
			</amedus>
		  </updates>
		</layout>
  </frontend>
  <global>
    <helpers>
      <amedus>
        <class>Harman_Amedus_Helper</class>
      </amedus>
    </helpers>
	<blocks>
	  <amedus>
		<class>Harman_Amedus_Block</class>
	  </amedus>
	</blocks>
  <models>
    <amedus>
    <class>Harman_Amedus_Model</class>
    <resourceModel>amedus_mysql4</resourceModel>
    </amedus>
    <amedus_mysql4>
    <class>Harman_Amedus_Model_Mysql4</class>
    <entities>      
        <passenger>
        <table>amedus_passenger</table>
        </passenger>
    </entities>
    </amedus_mysql4>
  </models>
  <resources>
    <amedus_setup>
    <setup>
      <module>Harman_Amedus</module>
    </setup>
    <connection>
      <use>core_setup</use>
    </connection>
    </amedus_setup>
    <amedus_write>
    <connection>
      <use>core_write</use>
    </connection>
    </amedus_write>
    <amedus_read>
    <connection>
      <use>core_read</use>
    </connection>
    </amedus_read>
  </resources>
  <events>
   <checkout_cart_add_product_complete> <!-- identifier of the event we want to catch -->
        <observers>
          <checkout_cart_add_product_complete_handler> <!-- identifier of the event handler -->
            <type>model</type> <!-- class method call type; valid are model, object and singleton -->
            <class>amedus/observer</class> <!-- observers class alias -->
            <method>addQuote</method>  <!-- observer's method to be called -->
            <args></args> <!-- additional arguments passed to observer -->
          </checkout_cart_add_product_complete_handler>
        </observers>
      </checkout_cart_add_product_complete>
    <sales_convert_quote_to_order> <!-- identifier of the event we want to catch -->
        <observers>
          <sales_convert_quote_to_order_handler> <!-- identifier of the event handler -->
            <type>model</type> <!-- class method call type; valid are model, object and singleton -->
            <class>amedus/observer</class> <!-- observers class alias -->
            <method>addOrder</method>  <!-- observer's method to be called -->
            <args></args> <!-- additional arguments passed to observer -->
          </sales_convert_quote_to_order_handler>
        </observers>
      </sales_convert_quote_to_order>
    </events>
  </global>
  <admin>
  <routers>
    <amedus>
      <use>admin</use>
    <args>
      <module>Harman_Amedus</module>
      <frontName>admin_amedus</frontName>
    </args>
    </amedus>
  </routers>
  </admin>
  <adminhtml>
  <menu>
    <amedus module="amedus">
    <title>Amedus</title>
    <sort_order>100</sort_order>
    <children>
      <passenger module="amedus">
        <title>Manage Passenger</title>
      <sort_order>0</sort_order>
      <action>admin_amedus/adminhtml_passenger</action>
      </passenger>
    </children>
    </amedus>
  </menu>
  <acl>
    <resources>
    <all>
      <title>Allow Everything</title>
    </all>
    <admin>
      <children>
      <amedus translate="title" module="amedus">
        <title>Amedus</title>
        <sort_order>1000</sort_order>
        <children>
      <passenger translate="title">
      <title>Manage Passenger</title>
      <sort_order>0</sort_order>
      </passenger>
        </children>
      </amedus>
      </children>
    </admin>
    </resources>
  </acl>
  <layout>
    <updates>
    <amedus>
      <file>amedus.xml</file>
    </amedus>
    </updates>
  </layout>
  </adminhtml>
</config> 